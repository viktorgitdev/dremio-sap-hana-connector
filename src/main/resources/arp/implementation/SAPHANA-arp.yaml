#
# Copyright (C) 2017-2019 Dremio Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

metadata:
  # Manually Configured Metadata Section.
  name: SAPHANA
  apiname: SAPHANA
  spec_version: '1'

syntax:
  # Manually Configured Syntax Section.
  identifier_length_limit: 128
  allows_boolean_literal: false
  map_boolean_literal_to_bit: false
  supports_catalogs: false
  supports_schemas: true

data_types:
  mappings:
  # Manually Configured Data Types Mappings Section.
  - source:
      name: "BOOLEAN"
    dremio:
      name: "boolean"
  - source:
      name: "INTEGER"
    dremio:
      name: "integer"
  - source:
      name: "TIMESTAMP"
    dremio:
      name: "timestamp"
    default_cast_spec: true
  - source:
      name: "BIGINT"
    dremio:
      name: "bigint"
  - source:
      name: "DOUBLE"
    dremio:
      name: "double"
  - source:
      name: "FLOAT"
    dremio:
      name: "double"
  - source:
      name: "DECIMAL"
    dremio:
      name: "decimal"
  - source:
      name: "DATE"
    dremio:
      name: "date"
  - source:
      name: "VARCHAR"
    dremio:
      name: "varchar"

relational_algebra:
  aggregation:
    enable: true
    group_by_ordinal: true
    distinct: true
    count_functions:
      count_star:
        enable: true
      count:
        enable: true
      count_multi:
        enable: true
        variable_rewrite:
          separator_sequence:
            - ' IS NULL OR '
          rewrite_format: 'SUM(CASE WHEN {separator[0]} IS NULL THEN 0 ELSE 1 END)'
      count_distinct:
        enable: true
      count_distinct_multi:
        enable: true
        variable_rewrite:
          separator_sequence:
            - ' IS NULL OR '
            - ', '
          rewrite_format: 'COUNT(DISTINCT CASE WHEN {separator[0]} IS NULL THEN NULL ELSE CONCAT({separator[1]}) END)'
    functions:
    - names:
      - "avg"
      signatures:
      - args:
        - "double"
        return: "double"
      - args:
        - "integer"
        return: "double"
    - names:
      - "max"
      - "min"
      signatures:
      - args:
        - "integer"
        return: "integer"
      - args:
        - "double"
        return: "double"
      - args:
        - "varchar"
        return: "varchar"
    - names:
      - "sum"
      signatures:
      - args:
        - "double"
        return: "double"
      - args:
        - "integer"
        return: "bigint"

  except:
    enable: true
  project:
    enable: true
  join:
    enable: true
    cross:
      enable: true
    inner:
      enable: true
      inequality: true
    left:
      enable: true
      inequality: true
    right:
      enable: true
      inequality: true
    full:
      enable: true
      inequality: true
  sort:
    enable: true
    order_by:
      enable: true
      default_nulls_ordering: high
    fetch_offset:
      offset_fetch:
        enable: false
        format: 'LIMIT {1}'
      offset_only:
        enable: false
      fetch_only:
        enable: true
        format: 'LIMIT {0}'
  union:
    enable: true
  union_all:
    enable: true
  values:
    enable: false
    method: values

# Describe the set of function signatures that are internally supported.
expressions:
  subqueries:
    correlated: true
    scalar: true
    in_clause: true
  supports_case: true
  supports_over: false
  operators:
    - names:
      - "="
      - "!="
      - "<>"
      - ">"
      - ">="
      - "<"
      - "<="
      signatures:
      - args:
        - "double"
        - "double"
        return: "boolean"
      - args:
        - "double"
        - "integer"
        return: "boolean"
      - args:
        - "double"
        - "varchar"
        return: "boolean"
      - args:
        - "integer"
        - "double"
        return: "boolean"
      - args:
        - "integer"
        - "integer"
        return: "boolean"
      - args:
        - "integer"
        - "varchar"
        return: "boolean"
      - args:
        - "varchar"
        - "varchar"
        return: "boolean"
    - names:
      - "="
      signatures:
      - args:
        - "varchar"
        - "date"
        return: "boolean"
        rewrite: "cast({0} as date) = {1}"
      - args:
        - "varchar"
        - "time"
        return: "boolean"
      - args:
        - "varchar"
        - "timestamp"
        return: "boolean"
      - args:
        - "date"
        - "varchar"
        return: "boolean"
        rewrite: "{0} = cast({1} as date)"
      - args:
        - "timestamp"
        - "varchar"
        return: "boolean"
        rewrite: "cast({0} as timestamp) = {1}"
      - args:
        - "time"
        - "varchar"
        return: "boolean"
        rewrite: "{0} = cast({1} as time)"
    - names:
      - ">"
      signatures:
      - args:
        - "varchar"
        - "date"
        return: "boolean"
        rewrite: "cast({0} as date) > {1}"
      - args:
        - "varchar"
        - "time"
        return: "boolean"
        rewrite: "cast({0} as time) > {1}"
      - args:
        - "varchar"
        - "timestamp"
        return: "boolean"
        rewrite: "cast({0} as timestamp) > {1}"
      - args:
        - "date"
        - "varchar"
        return: "boolean"
        rewrite: "{0} > cast({1} as date)"
      - args:
        - "timestamp"
        - "varchar"
        return: "boolean"
        rewrite: "{0} > cast({1} as timestamp)"
      - args:
        - "time"
        - "varchar"
        return: "boolean"
        rewrite: "{0} > cast({1} as time)"
    - names:
      - ">="
      signatures:
      - args:
        - "varchar"
        - "date"
        return: "boolean"
        rewrite: "cast({0} as date) >= {1}"
      - args:
        - "varchar"
        - "time"
        return: "boolean"
        rewrite: "cast({0} as time) >= {1}"
      - args:
        - "varchar"
        - "timestamp"
        return: "boolean"
        rewrite: "cast({0} as timestamp) >= {1}"
      - args:
        - "date"
        - "varchar"
        return: "boolean"
        rewrite: "{0} >= cast({1} as date)"
      - args:
        - "timestamp"
        - "varchar"
        return: "boolean"
        rewrite: "{0} >= cast({1} as timestamp)"
      - args:
        - "time"
        - "varchar"
        return: "boolean"
        rewrite: "{0} >= cast({1} as time)"
    - names:
      - "<"
      signatures:
      - args:
        - "varchar"
        - "date"
        return: "boolean"
        rewrite: "cast({0} as date) < {1}"
      - args:
        - "varchar"
        - "time"
        return: "boolean"
        rewrite: "cast({0} as time) < {1}"
      - args:
        - "varchar"
        - "timestamp"
        return: "boolean"
        rewrite: "cast({0} as timestamp) < {1}"
      - args:
        - "date"
        - "varchar"
        return: "boolean"
        rewrite: "{0} < cast({1} as date)"
      - args:
        - "timestamp"
        - "varchar"
        return: "boolean"
        rewrite: "{0} < cast({1} as timestamp)"
      - args:
        - "time"
        - "varchar"
        return: "boolean"
        rewrite: "{0} < cast({1} as time)"
    - names:
      - "<="
      signatures:
      - args:
        - "varchar"
        - "date"
        return: "boolean"
        rewrite: "cast({0} as date) <= {1}"
      - args:
        - "varchar"
        - "time"
        return: "boolean"
        rewrite: "cast({0} as time) <= {1}"
      - args:
        - "varchar"
        - "timestamp"
        return: "boolean"
        rewrite: "cast({0} as timestamp) <= {1}"
      - args:
        - "date"
        - "varchar"
        return: "boolean"
        rewrite: "{0} <= cast({1} as date)"
      - args:
        - "timestamp"
        - "varchar"
        return: "boolean"
        rewrite: "{0} <= cast({1} as timestamp)"
      - args:
        - "time"
        - "varchar"
        return: "boolean"
        rewrite: "{0} <= cast({1} as time)"
    - names:
      - "!="
      - "<>"
      signatures:
      - args:
        - "varchar"
        - "date"
        return: "boolean"
        rewrite: "cast({0} as date) != {1}"
      - args:
        - "varchar"
        - "time"
        return: "boolean"
        rewrite: "cast({0} as time) != {1}"
      - args:
        - "varchar"
        - "timestamp"
        return: "boolean"
        rewrite: "cast({0} as timestamp) != {1}"
      - args:
        - "date"
        - "varchar"
        return: "boolean"
        rewrite: "{0} != cast({1} as date)"
      - args:
        - "timestamp"
        - "varchar"
        return: "boolean"
        rewrite: "{0} != cast({1} as timestamp)"
      - args:
        - "time"
        - "varchar"
        return: "boolean"
        rewrite: "{0} != cast({1} as time)"
    - names:
      - "not"
      signatures:
      - args:
        - "boolean"
        return: "boolean"
    # Example scalar function
    - names:
      - "sign"
      signatures:
      - args:
        - "double"
        return: "double"
      - args:
        - "integer"
        return: "integer"
        # Example rewrite (although this is not necessary here as the default is the same)
        rewrite: "SIGN({0})"

  variable_length_operators:
    - names:
        - and
      variable_signatures:
        - return: boolean
          arg_type: boolean
    - names:
        - or
      variable_signatures:
        - return: boolean
          arg_type: boolean
